/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/src/index.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/normalize.css/normalize.css":
/*!*****************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/src!./node_modules/sass-loader/dist/cjs.js!./node_modules/normalize.css/normalize.css ***!
  \*****************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, "/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n/* Document\n   ========================================================================== */\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\nhtml {\n  line-height: 1.15;\n  /* 1 */\n  -webkit-text-size-adjust: 100%;\n  /* 2 */ }\n\n/* Sections\n   ========================================================================== */\n/**\n * Remove the margin in all browsers.\n */\nbody {\n  margin: 0; }\n\n/**\n * Render the `main` element consistently in IE.\n */\nmain {\n  display: block; }\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0; }\n\n/* Grouping content\n   ========================================================================== */\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\nhr {\n  box-sizing: content-box;\n  /* 1 */\n  height: 0;\n  /* 1 */\n  overflow: visible;\n  /* 2 */ }\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\npre {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */ }\n\n/* Text-level semantics\n   ========================================================================== */\n/**\n * Remove the gray background on active links in IE 10.\n */\na {\n  background-color: transparent; }\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\nabbr[title] {\n  border-bottom: none;\n  /* 1 */\n  text-decoration: underline;\n  /* 2 */\n  -webkit-text-decoration: underline dotted;\n          text-decoration: underline dotted;\n  /* 2 */ }\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\nb,\nstrong {\n  font-weight: bolder; }\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */ }\n\n/**\n * Add the correct font size in all browsers.\n */\nsmall {\n  font-size: 80%; }\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline; }\n\nsub {\n  bottom: -0.25em; }\n\nsup {\n  top: -0.5em; }\n\n/* Embedded content\n   ========================================================================== */\n/**\n * Remove the border on images inside links in IE 10.\n */\nimg {\n  border-style: none; }\n\n/* Forms\n   ========================================================================== */\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit;\n  /* 1 */\n  font-size: 100%;\n  /* 1 */\n  line-height: 1.15;\n  /* 1 */\n  margin: 0;\n  /* 2 */ }\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\nbutton,\ninput {\n  /* 1 */\n  overflow: visible; }\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\nbutton,\nselect {\n  /* 1 */\n  text-transform: none; }\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\nbutton,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button; }\n\n/**\n * Remove the inner border and padding in Firefox.\n */\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0; }\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n  outline: 1px dotted ButtonText; }\n\n/**\n * Correct the padding in Firefox.\n */\nfieldset {\n  padding: 0.35em 0.75em 0.625em; }\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\nlegend {\n  box-sizing: border-box;\n  /* 1 */\n  color: inherit;\n  /* 2 */\n  display: table;\n  /* 1 */\n  max-width: 100%;\n  /* 1 */\n  padding: 0;\n  /* 3 */\n  white-space: normal;\n  /* 1 */ }\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\nprogress {\n  vertical-align: baseline; }\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\ntextarea {\n  overflow: auto; }\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  box-sizing: border-box;\n  /* 1 */\n  padding: 0;\n  /* 2 */ }\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto; }\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n[type=\"search\"] {\n  -webkit-appearance: textfield;\n  /* 1 */\n  outline-offset: -2px;\n  /* 2 */ }\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none; }\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  /* 1 */\n  font: inherit;\n  /* 2 */ }\n\n/* Interactive\n   ========================================================================== */\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\ndetails {\n  display: block; }\n\n/*\n * Add the correct display in all browsers.\n */\nsummary {\n  display: list-item; }\n\n/* Misc\n   ========================================================================== */\n/**\n * Add the correct display in IE 10+.\n */\ntemplate {\n  display: none; }\n\n/**\n * Add the correct display in IE 10.\n */\n[hidden] {\n  display: none; }\n", ""]);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/src/index.js!./node_modules/sass-loader/dist/cjs.js!./src/scss/main.scss":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/src!./node_modules/sass-loader/dist/cjs.js!./src/scss/main.scss ***!
  \*******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Imports
exports.push([module.i, "@import url(https://fonts.googleapis.com/css?family=Open+Sans&display=swap);", ""]);
exports.push([module.i, "@import url(https://fonts.googleapis.com/css?family=Montserrat&display=swap);", ""]);
var getUrl = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/getUrl.js */ "./node_modules/css-loader/dist/runtime/getUrl.js");
var ___CSS_LOADER_URL___0___ = getUrl(__webpack_require__(/*! ../font/Coves_Bold.otf */ "./src/font/Coves_Bold.otf"));
var ___CSS_LOADER_URL___1___ = getUrl(__webpack_require__(/*! ../font/CaviarDreams_Bold.ttf */ "./src/font/CaviarDreams_Bold.ttf"));
var ___CSS_LOADER_URL___2___ = getUrl(__webpack_require__(/*! ../font/Futura_Bold.otf */ "./src/font/Futura_Bold.otf"));
var ___CSS_LOADER_URL___3___ = getUrl(__webpack_require__(/*! ../font/fontello.eot?66750031 */ "./src/font/fontello.eot?66750031"));
var ___CSS_LOADER_URL___4___ = getUrl(__webpack_require__(/*! ../font/fontello.eot?66750031 */ "./src/font/fontello.eot?66750031") + "#iefix");
var ___CSS_LOADER_URL___5___ = getUrl(__webpack_require__(/*! ../font/fontello.woff2?66750031 */ "./src/font/fontello.woff2?66750031"));
var ___CSS_LOADER_URL___6___ = getUrl(__webpack_require__(/*! ../font/fontello.woff?66750031 */ "./src/font/fontello.woff?66750031"));
var ___CSS_LOADER_URL___7___ = getUrl(__webpack_require__(/*! ../font/fontello.ttf?66750031 */ "./src/font/fontello.ttf?66750031"));
var ___CSS_LOADER_URL___8___ = getUrl(__webpack_require__(/*! ../font/fontello.svg?66750031 */ "./src/font/fontello.svg?66750031") + "#fontello");
var ___CSS_LOADER_URL___9___ = getUrl(__webpack_require__(/*! ../img/hero-bg.png */ "./src/img/hero-bg.png"));
var ___CSS_LOADER_URL___10___ = getUrl(__webpack_require__(/*! ../img/triangle-1.png */ "./src/img/triangle-1.png"));
var ___CSS_LOADER_URL___11___ = getUrl(__webpack_require__(/*! ../img/triangle-2.png */ "./src/img/triangle-2.png"));
var ___CSS_LOADER_URL___12___ = getUrl(__webpack_require__(/*! ../img/triangle-3.png */ "./src/img/triangle-3.png"));
var ___CSS_LOADER_URL___13___ = getUrl(__webpack_require__(/*! ../img/triangle-4.png */ "./src/img/triangle-4.png"));
var ___CSS_LOADER_URL___14___ = getUrl(__webpack_require__(/*! ../img/testimonial.png */ "./src/img/testimonial.png"));
var ___CSS_LOADER_URL___15___ = getUrl(__webpack_require__(/*! ../img/testimonial-bg.png */ "./src/img/testimonial-bg.png"));
// Module
exports.push([module.i, "@charset \"UTF-8\";\n/**\r\n * CONTENTS\r\n *\r\n * GLOBAL\r\n * Config...............Configuration variables.\r\n * Mixins...............Useful mixins.\r\n * Colors...............Color variables.\r\n * Typography...........Typography-related variables.\r\n * Breakpoints..........Breakpoint values.\r\n *\r\n * GENERIC\r\n * Box-sizing...........Adjust default box-sizing.\r\n *\r\n * BASE\r\n * Document.............Base HTML style.\r\n * Body.................Base body style.\r\n * Headings.............H1-H6 base styles.\r\n *\r\n * OBJECTS\r\n * Text.................Various text styles.\r\n * Links................Various link styles.\r\n * Images...............Various image styles.\r\n *\r\n * COMPONENTS\r\n * Buttons..............Button elements.\r\n * Icons................Icons used throughout the site.\r\n * Hero-area............Hero area of the page.\r\n * Features-area........Features area of the page.\r\n * Pricing-area.........Pricing area of the page.\r\n * Group-block..........A grouping of elements in a block.\r\n */\n/*------------------------------------*\\\r\n  #Config\r\n\\*------------------------------------*/\n/*------------------------------------*\\\r\n  #Mixins\r\n\\*------------------------------------*/\n/*------------------------------------*\\\r\n  #Colors\r\n\\*------------------------------------*/\n/*------------------------------------*\\\r\n  #Typography\r\n\\*------------------------------------*/\n@font-face {\n  font-family: 'Coves Bold';\n  src: url(" + ___CSS_LOADER_URL___0___ + "); }\n\n@font-face {\n  font-family: 'CaviarDreams Bold';\n  src: url(" + ___CSS_LOADER_URL___1___ + "); }\n\n@font-face {\n  font-family: 'Futura Bold';\n  src: url(" + ___CSS_LOADER_URL___2___ + "); }\n\n/*------------------------------------*\\\r\n  #Breakpoints\r\n\\*------------------------------------*/\n/*------------------------------------*\\\r\n  #Box-sizing\r\n\\*------------------------------------*/\nhtml {\n  box-sizing: border-box; }\n\n*, *:before, *:after {\n  box-sizing: inherit; }\n\n/*------------------------------------*\\\r\n  #Document\r\n\\*------------------------------------*/\nhtml {\n  font-size: 1.11111vw; }\n  @media (max-width: 56.25em) {\n    html {\n      font-size: 10px; } }\n\n/*------------------------------------*\\\r\n  #Body\r\n\\*------------------------------------*/\nbody {\n  font-family: \"Open Sans\", sans-serif; }\n\n/*------------------------------------*\\\r\n  #Headings\r\n\\*------------------------------------*/\nh1, h2, h3, h4, h5, h6 {\n  margin: 0; }\n\n/*------------------------------------*\\\r\n  #Text\r\n\\*------------------------------------*/\n.txt-uppercase {\n  text-transform: uppercase; }\n\n.txt-price {\n  position: relative;\n  font-size: 1.8125rem;\n  font-family: 'CaviarDreams Bold', sans-serif;\n  font-weight: 400; }\n  .txt-price::before {\n    position: relative;\n    content: '$';\n    font-size: 0.875rem;\n    top: -0.625rem; }\n\n.main-heading {\n  font-size: 2.375rem;\n  font-weight: 600;\n  color: #FFF;\n  margin-top: 5.375rem; }\n  @media (max-width: 56.25em) {\n    .main-heading {\n      margin-top: 0; } }\n\n.features-heading {\n  margin-top: 6.25rem;\n  color: #1535E2;\n  font-size: 2.5rem;\n  font-family: 'Coves Bold', sans-serif;\n  font-weight: 400; }\n  @media (max-width: 56.25em) {\n    .features-heading {\n      margin-top: 1.875rem; } }\n\n.pricing-heading {\n  margin-top: 5.1875rem;\n  margin-bottom: 7.375rem;\n  font-family: 'Coves Bold', sans-serif;\n  font-weight: 400;\n  font-size: 3.125rem;\n  color: #1535E2;\n  text-align: center; }\n  @media (max-width: 37.5em) {\n    .pricing-heading {\n      margin-top: 1.25rem;\n      margin-bottom: 1.25rem; } }\n\n.pricing-opt-heading {\n  font-size: 1.8125rem;\n  font-family: 'Futura Bold', sans-serif;\n  font-weight: 400; }\n\n/*------------------------------------*\\\r\n  #Links\r\n\\*------------------------------------*/\n.features-link {\n  text-transform: uppercase;\n  text-decoration: none;\n  margin-top: 3.3125rem;\n  font-size: 1.0625rem;\n  font-weight: 600;\n  color: #3D00E2; }\n\n/*------------------------------------*\\\r\n  #Images\r\n\\*------------------------------------*/\n@media (max-width: 56.25em) {\n  .img-features {\n    max-width: 50%; } }\n\n@media (max-width: 25em) {\n  .img-features {\n    max-width: 60%; } }\n\n/*------------------------------------*\\\r\n  #Buttons\r\n\\*------------------------------------*/\n.btn {\n  display: block;\n  padding-top: 0.75rem;\n  text-transform: uppercase;\n  text-decoration: none;\n  text-align: center;\n  font-family: \"Open Sans\", sans-serif;\n  font-size: 1.25rem;\n  color: #3A3A3A;\n  background-color: #FFF;\n  border-radius: 1.71875rem;\n  border: solid 1px #979797;\n  width: 18.6875rem;\n  height: 3.4375rem; }\n\n.btn--pricing {\n  width: 11.9375rem;\n  margin-top: 3.8125rem; }\n\n/*------------------------------------*\\\r\n  #Icons\r\n\\*------------------------------------*/\n@font-face {\n  font-family: 'fontello';\n  src: url(" + ___CSS_LOADER_URL___3___ + ");\n  src: url(" + ___CSS_LOADER_URL___4___ + ") format(\"embedded-opentype\"), url(" + ___CSS_LOADER_URL___5___ + ") format(\"woff2\"), url(" + ___CSS_LOADER_URL___6___ + ") format(\"woff\"), url(" + ___CSS_LOADER_URL___7___ + ") format(\"truetype\"), url(" + ___CSS_LOADER_URL___8___ + ") format(\"svg\");\n  font-weight: normal;\n  font-style: normal; }\n\n/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */\n/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */\n/*\n@media screen and (-webkit-min-device-pixel-ratio:0) {\n  @font-face {\n    font-family: 'fontello';\n    src: url('../font/fontello.svg?66750031#fontello') format('svg');\n  }\n}\n*/\n[class^=\"icon-\"]:before, [class*=\" icon-\"]:before {\n  font-family: \"fontello\";\n  font-style: normal;\n  font-weight: normal;\n  speak: none;\n  display: inline-block;\n  text-decoration: inherit;\n  width: 1em;\n  margin-right: .2em;\n  text-align: center;\n  /* opacity: .8; */\n  /* For safety - reset parent styles, that can break glyph codes*/\n  font-variant: normal;\n  text-transform: none;\n  /* fix buttons height, for twitter bootstrap */\n  line-height: 1em;\n  /* Animation center compensation - margins should be symmetric */\n  /* remove if not needed */\n  margin-left: .2em;\n  /* you can be more comfortable with increased icons size */\n  /* font-size: 120%; */\n  /* Font smoothing. That was taken from TWBS */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  /* Uncomment for 3D effect */\n  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */ }\n\n.icon-check:before {\n  content: '\\e800'; }\n\n/* '' */\n.icon-star:before {\n  content: '\\e801'; }\n\n/* '' */\n.icon-user:before {\n  content: '\\e802'; }\n\n/* '' */\n.icon-crown-2:before {\n  content: '\\e803'; }\n\n/* '' */\n.icon-crown-startup:before {\n  content: '\\e804'; }\n\n/* '' */\n.icon-crown-basic:before {\n  content: '\\e805'; }\n\n/* '' */\n.icon {\n  margin-left: 0.4375rem;\n  margin-right: 0.4375rem;\n  color: #D36CF6; }\n\n.icon-pricing {\n  color: #B44AD7;\n  font-size: 2.5rem; }\n\n.icon--disabled {\n  color: #52046C; }\n\n.icon--white {\n  color: #FFF; }\n\n/*------------------------------------*\\\r\n  #Hero-area\r\n\\*------------------------------------*/\n.hero-area {\n  display: flex;\n  background-image: url(" + ___CSS_LOADER_URL___9___ + ");\n  background-size: 100% 100%;\n  padding-top: 11.8125rem;\n  padding-bottom: 16.125rem;\n  padding-left: 6.6875rem;\n  padding-right: 5.5625rem; }\n  @media (max-width: 56.25em) {\n    .hero-area {\n      align-items: center;\n      flex-direction: column;\n      padding-top: 0;\n      padding-left: 0;\n      padding-right: 0; } }\n\n.hero-area__col {\n  margin-top: 5.375rem; }\n  @media (max-width: 56.25em) {\n    .hero-area__col {\n      margin-top: 1.25rem; } }\n  @media (max-width: 25em) {\n    .hero-area__col {\n      display: flex;\n      flex-direction: column; } }\n\n.hero-area__col:nth-of-type(1) {\n  font-family: 'Montserrat', sans-serif; }\n  @media (max-width: 56.25em) {\n    .hero-area__col:nth-of-type(1) {\n      margin-left: 6.25rem; } }\n  @media (max-width: 25em) {\n    .hero-area__col:nth-of-type(1) {\n      margin-left: 3.125rem; } }\n\n.hero-area__col:nth-of-type(2) {\n  margin-left: 3.875rem;\n  display: flex;\n  background: rgba(216, 216, 216, 0.4);\n  height: -webkit-max-content;\n  height: -moz-max-content;\n  height: max-content;\n  padding-right: 4.6875rem;\n  color: #FFF; }\n  @media (max-width: 37.5em) {\n    .hero-area__col:nth-of-type(2) {\n      margin-left: 0;\n      padding-right: 1.25rem; } }\n\n.hero-area__sub-txt {\n  font-size: 2.375rem;\n  color: #CFCFCF;\n  margin-bottom: 3rem;\n  margin-top: 1.875rem;\n  width: 24rem; }\n\n.hero-area__stats-col {\n  display: flex;\n  flex-direction: column; }\n\n.hero-area__stats-col:nth-of-type(2) {\n  border-left: solid 0.0625rem #979797;\n  padding-left: 4.625rem; }\n  @media (max-width: 37.5em) {\n    .hero-area__stats-col:nth-of-type(2) {\n      padding-left: 0; } }\n  @media (max-width: 37.5em) {\n    .hero-area__stats-col:nth-of-type(2) {\n      border-left: none;\n      border-top: solid 0.0625rem #979797; } }\n\n.hero-area__daily-row {\n  padding-left: 3.0625rem;\n  padding-right: 2.0625rem;\n  padding-top: 2.1875rem;\n  padding-bottom: 2.5rem;\n  display: flex; }\n\n.hero-area__daily-row:nth-of-type(2) {\n  border-top: solid 0.0625rem #979797;\n  border-bottom: solid 0.0625rem #979797; }\n\n.hero-area__daily-row p {\n  font-size: 1.125rem;\n  margin: 0;\n  text-transform: uppercase; }\n\n.hero-area__daily-row strong {\n  font-size: 1.6875rem;\n  margin-left: 1.6875rem;\n  font-weight: 300; }\n\n.hero-area__date {\n  margin-right: 5.125rem;\n  text-transform: uppercase;\n  font-size: 1.25rem; }\n\n.hero-area__week-col {\n  margin-top: 3.5rem;\n  margin-bottom: 3.5rem;\n  text-align: right; }\n  @media (max-width: 37.5em) {\n    .hero-area__week-col {\n      margin-top: 1.25rem;\n      margin-bottom: 1.25rem; } }\n  @media (max-width: 25em) {\n    .hero-area__week-col {\n      text-align: center; } }\n\n.hero-area__week-txt {\n  font-size: 1.25rem;\n  text-transform: uppercase; }\n\n.hero-area__week-txt strong {\n  font-size: 3.125rem;\n  font-weight: 300; }\n\n.hero-area__checks-col {\n  font-size: 0.875rem; }\n  @media (max-width: 25em) {\n    .hero-area__checks-col {\n      align-self: center; } }\n\n.hero-area__checks-col p {\n  width: -webkit-max-content;\n  width: -moz-max-content;\n  width: max-content; }\n\n/*------------------------------------*\\\r\n  #Features-area\r\n\\*------------------------------------*/\n.features-area {\n  padding-top: 9.375rem; }\n  @media (max-width: 56.25em) {\n    .features-area {\n      padding-top: 0; } }\n\n.features-area__row {\n  position: relative;\n  display: flex;\n  margin-bottom: 7.5rem; }\n  .features-area__row::before {\n    position: absolute; }\n  .features-area__row::after {\n    position: absolute; }\n  @media (max-width: 56.25em) {\n    .features-area__row {\n      flex-direction: column-reverse;\n      margin-bottom: 3.125rem;\n      align-items: center; } }\n\n.features-area__row:nth-of-type(odd) {\n  margin-left: 12.75rem; }\n  .features-area__row:nth-of-type(odd) .features-area__col {\n    margin-right: 9.875rem; }\n    @media (max-width: 56.25em) {\n      .features-area__row:nth-of-type(odd) .features-area__col {\n        margin-right: 0; } }\n  @media (max-width: 56.25em) {\n    .features-area__row:nth-of-type(odd) {\n      margin-left: 0; } }\n\n.features-area__row:nth-of-type(even) {\n  flex-direction: row-reverse; }\n  .features-area__row:nth-of-type(even) .features-area__col {\n    margin-left: 13.3125rem; }\n    @media (max-width: 56.25em) {\n      .features-area__row:nth-of-type(even) .features-area__col {\n        margin-left: 0; } }\n  .features-area__row:nth-of-type(even) .img-features {\n    position: relative;\n    left: -2.1875rem; }\n    @media (max-width: 56.25em) {\n      .features-area__row:nth-of-type(even) .img-features {\n        left: 0; } }\n  @media (max-width: 56.25em) {\n    .features-area__row:nth-of-type(even) {\n      flex-direction: column-reverse; } }\n\n.features-area__row:nth-of-type(1)::before {\n  content: url(" + ___CSS_LOADER_URL___10___ + ");\n  top: -8.5rem; }\n  @media (max-width: 56.25em) {\n    .features-area__row:nth-of-type(1)::before {\n      content: none; } }\n\n.features-area__row:nth-of-type(1)::after {\n  content: url(" + ___CSS_LOADER_URL___11___ + ");\n  bottom: -6.8125rem;\n  right: 0; }\n  @media (max-width: 56.25em) {\n    .features-area__row:nth-of-type(1)::after {\n      content: none; } }\n\n.features-area__row:nth-of-type(2)::before {\n  content: url(" + ___CSS_LOADER_URL___12___ + ");\n  left: 3.8125rem;\n  bottom: -5.625rem; }\n  @media (max-width: 56.25em) {\n    .features-area__row:nth-of-type(2)::before {\n      content: none; } }\n\n.features-area__row:nth-of-type(2)::after {\n  content: url(" + ___CSS_LOADER_URL___13___ + ");\n  bottom: 0;\n  left: 65.625rem; }\n  @media (max-width: 56.25em) {\n    .features-area__row:nth-of-type(2)::after {\n      content: none; } }\n\n@media (max-width: 56.25em) {\n  .features-area__col {\n    text-align: center; } }\n\n.features-area__col p {\n  font-size: 1.25rem;\n  color: #333536;\n  width: 26.8125rem; }\n\n/*------------------------------------*\\\r\n  #Testimonial-area\r\n\\*------------------------------------*/\n.testimonial-area {\n  background-image: url(" + ___CSS_LOADER_URL___14___ + ");\n  height: 45.0625rem;\n  padding-top: 12.625rem;\n  padding-left: 10.0625rem; }\n  .testimonial-area p {\n    font-size: 2.5rem;\n    font-weight: 700;\n    color: #CFCFCF;\n    width: 45.875rem; }\n    @media (max-width: 37.5em) {\n      .testimonial-area p {\n        width: auto; } }\n  .testimonial-area .testimonial-area__name {\n    font-size: 1.875rem;\n    font-weight: 700;\n    color: #A22ACE; }\n  @media (max-width: 81.25em) {\n    .testimonial-area {\n      background-size: contain; } }\n  @media (max-width: 56.25em) {\n    .testimonial-area {\n      background-image: url(" + ___CSS_LOADER_URL___15___ + ");\n      background-size: cover; } }\n  @media (max-width: 37.5em) {\n    .testimonial-area {\n      padding: 0;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: auto;\n      text-align: center; } }\n\n/*------------------------------------*\\\r\n  #Pricing-area\r\n\\*------------------------------------*/\n/*------------------------------------*\\\r\n  #Group-block\r\n\\*------------------------------------*/\n.group-block {\n  display: flex;\n  justify-content: center;\n  align-items: flex-end; }\n  @media (max-width: 37.5em) {\n    .group-block {\n      flex-direction: column;\n      align-items: center; } }\n\n.group-block__box {\n  display: flex;\n  flex-direction: column;\n  height: 31.25rem;\n  width: 19.375rem;\n  align-items: center;\n  justify-content: center;\n  border-radius: 1.71875rem;\n  color: #FFF;\n  font-size: 0.8125rem;\n  font-family: 'Montserrat', sans-serif;\n  /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#821a80+0,c96cbb+100 */\n  background: #821a80;\n  /* Old browsers */\n  /* FF3.6-15 */\n  /* Chrome10-25,Safari5.1-6 */\n  background: linear-gradient(to bottom, #821a80 0%, #c96cbb 100%);\n  /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#821a80', endColorstr='#c96cbb',GradientType=0 );\n  /* IE6-9 */ }\n\n.group-block__box--special {\n  margin-left: 2.0625rem;\n  margin-right: 2.0625rem;\n  height: 33.9375rem;\n  width: 21.5rem; }\n  .group-block__box--special .group-block__list {\n    margin-top: 2.8125rem; }\n\n.group-block__list {\n  font-family: 'CaviarDreams Bold', sans-serif;\n  font-size: 0.9375rem;\n  list-style: none;\n  padding: 0; }\n  @media (max-width: 56.25em) {\n    .group-block__list {\n      font-size: 1.25rem; } }\n\n/*------------------------------------*\\\r\n  #Page-footer\r\n\\*------------------------------------*/\n.page-footer {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #7A06A6;\n  height: 20.25rem;\n  color: #CFCFCF;\n  font-size: 1.375rem;\n  padding-top: 5.1875rem; }\n  .page-footer a {\n    text-decoration: none;\n    color: #CFCFCF; }\n  @media (max-width: 56.25em) {\n    .page-footer {\n      padding-top: 1.25rem; } }\n  @media (max-width: 25em) {\n    .page-footer {\n      height: auto;\n      text-align: center; } }\n\n.page-footer__cols {\n  display: flex; }\n  @media (max-width: 25em) {\n    .page-footer__cols {\n      flex-direction: column;\n      align-items: center; } }\n\n.page-footer__col {\n  list-style: none;\n  padding: 0;\n  line-height: 2.375rem; }\n  .page-footer__col:nth-of-type(1) {\n    margin-right: 12.125rem; }\n    @media (max-width: 25em) {\n      .page-footer__col:nth-of-type(1) {\n        margin-right: 0; } }\n  @media (max-width: 25em) {\n    .page-footer__col {\n      text-align: center; } }\n", ""]);


/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return "@media ".concat(item[2], "{").concat(content, "}");
      }

      return content;
    }).join('');
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names


  list.i = function (modules, mediaQuery) {
    if (typeof modules === 'string') {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, '']];
    }

    var alreadyImportedModules = {};

    for (var i = 0; i < this.length; i++) {
      // eslint-disable-next-line prefer-destructuring
      var id = this[i][0];

      if (id != null) {
        alreadyImportedModules[id] = true;
      }
    }

    for (var _i = 0; _i < modules.length; _i++) {
      var item = modules[_i]; // skip already imported module
      // this implementation is not 100% perfect for weird media query combinations
      // when a module is imported multiple times with different media queries.
      // I hope this will never occur (Hey this way we have smaller bundles)

      if (item[0] == null || !alreadyImportedModules[item[0]]) {
        if (mediaQuery && !item[2]) {
          item[2] = mediaQuery;
        } else if (mediaQuery) {
          item[2] = "(".concat(item[2], ") and (").concat(mediaQuery, ")");
        }

        list.push(item);
      }
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring

  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot).concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
  return "/*# ".concat(data, " */");
}

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/getUrl.js":
/*!********************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/getUrl.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function (url, needQuotes) {
  // eslint-disable-next-line no-underscore-dangle, no-param-reassign
  url = url.__esModule ? url.default : url;

  if (typeof url !== 'string') {
    return url;
  } // If url is already wrapped in quotes, remove them


  if (/^['"].*['"]$/.test(url)) {
    // eslint-disable-next-line no-param-reassign
    url = url.slice(1, -1);
  } // Should url be wrapped?
  // See https://drafts.csswg.org/css-values-3/#urls


  if (/["'() \t\n]/.test(url) || needQuotes) {
    return "\"".concat(url.replace(/"/g, '\\"').replace(/\n/g, '\\n'), "\"");
  }

  return url;
};

/***/ }),

/***/ "./node_modules/normalize.css/normalize.css":
/*!**************************************************!*\
  !*** ./node_modules/normalize.css/normalize.css ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(/*! !../css-loader/dist/cjs.js!../postcss-loader/src!../sass-loader/dist/cjs.js!./normalize.css */ "./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/src/index.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/normalize.css/normalize.css");

if (typeof content === 'string') {
  content = [[module.i, content, '']];
}

var options = {}

options.insert = "head";
options.singleton = false;

var update = __webpack_require__(/*! ../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js")(content, options);

if (content.locals) {
  module.exports = content.locals;
}


/***/ }),

/***/ "./node_modules/smoothscroll-polyfill/dist/smoothscroll.js":
/*!*****************************************************************!*\
  !*** ./node_modules/smoothscroll-polyfill/dist/smoothscroll.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* smoothscroll v0.4.4 - 2019 - Dustan Kasten, Jeremias Menichelli - MIT License */
(function () {
  'use strict';

  // polyfill
  function polyfill() {
    // aliases
    var w = window;
    var d = document;

    // return if scroll behavior is supported and polyfill is not forced
    if (
      'scrollBehavior' in d.documentElement.style &&
      w.__forceSmoothScrollPolyfill__ !== true
    ) {
      return;
    }

    // globals
    var Element = w.HTMLElement || w.Element;
    var SCROLL_TIME = 468;

    // object gathering original scroll methods
    var original = {
      scroll: w.scroll || w.scrollTo,
      scrollBy: w.scrollBy,
      elementScroll: Element.prototype.scroll || scrollElement,
      scrollIntoView: Element.prototype.scrollIntoView
    };

    // define timing method
    var now =
      w.performance && w.performance.now
        ? w.performance.now.bind(w.performance)
        : Date.now;

    /**
     * indicates if a the current browser is made by Microsoft
     * @method isMicrosoftBrowser
     * @param {String} userAgent
     * @returns {Boolean}
     */
    function isMicrosoftBrowser(userAgent) {
      var userAgentPatterns = ['MSIE ', 'Trident/', 'Edge/'];

      return new RegExp(userAgentPatterns.join('|')).test(userAgent);
    }

    /*
     * IE has rounding bug rounding down clientHeight and clientWidth and
     * rounding up scrollHeight and scrollWidth causing false positives
     * on hasScrollableSpace
     */
    var ROUNDING_TOLERANCE = isMicrosoftBrowser(w.navigator.userAgent) ? 1 : 0;

    /**
     * changes scroll position inside an element
     * @method scrollElement
     * @param {Number} x
     * @param {Number} y
     * @returns {undefined}
     */
    function scrollElement(x, y) {
      this.scrollLeft = x;
      this.scrollTop = y;
    }

    /**
     * returns result of applying ease math function to a number
     * @method ease
     * @param {Number} k
     * @returns {Number}
     */
    function ease(k) {
      return 0.5 * (1 - Math.cos(Math.PI * k));
    }

    /**
     * indicates if a smooth behavior should be applied
     * @method shouldBailOut
     * @param {Number|Object} firstArg
     * @returns {Boolean}
     */
    function shouldBailOut(firstArg) {
      if (
        firstArg === null ||
        typeof firstArg !== 'object' ||
        firstArg.behavior === undefined ||
        firstArg.behavior === 'auto' ||
        firstArg.behavior === 'instant'
      ) {
        // first argument is not an object/null
        // or behavior is auto, instant or undefined
        return true;
      }

      if (typeof firstArg === 'object' && firstArg.behavior === 'smooth') {
        // first argument is an object and behavior is smooth
        return false;
      }

      // throw error when behavior is not supported
      throw new TypeError(
        'behavior member of ScrollOptions ' +
          firstArg.behavior +
          ' is not a valid value for enumeration ScrollBehavior.'
      );
    }

    /**
     * indicates if an element has scrollable space in the provided axis
     * @method hasScrollableSpace
     * @param {Node} el
     * @param {String} axis
     * @returns {Boolean}
     */
    function hasScrollableSpace(el, axis) {
      if (axis === 'Y') {
        return el.clientHeight + ROUNDING_TOLERANCE < el.scrollHeight;
      }

      if (axis === 'X') {
        return el.clientWidth + ROUNDING_TOLERANCE < el.scrollWidth;
      }
    }

    /**
     * indicates if an element has a scrollable overflow property in the axis
     * @method canOverflow
     * @param {Node} el
     * @param {String} axis
     * @returns {Boolean}
     */
    function canOverflow(el, axis) {
      var overflowValue = w.getComputedStyle(el, null)['overflow' + axis];

      return overflowValue === 'auto' || overflowValue === 'scroll';
    }

    /**
     * indicates if an element can be scrolled in either axis
     * @method isScrollable
     * @param {Node} el
     * @param {String} axis
     * @returns {Boolean}
     */
    function isScrollable(el) {
      var isScrollableY = hasScrollableSpace(el, 'Y') && canOverflow(el, 'Y');
      var isScrollableX = hasScrollableSpace(el, 'X') && canOverflow(el, 'X');

      return isScrollableY || isScrollableX;
    }

    /**
     * finds scrollable parent of an element
     * @method findScrollableParent
     * @param {Node} el
     * @returns {Node} el
     */
    function findScrollableParent(el) {
      while (el !== d.body && isScrollable(el) === false) {
        el = el.parentNode || el.host;
      }

      return el;
    }

    /**
     * self invoked function that, given a context, steps through scrolling
     * @method step
     * @param {Object} context
     * @returns {undefined}
     */
    function step(context) {
      var time = now();
      var value;
      var currentX;
      var currentY;
      var elapsed = (time - context.startTime) / SCROLL_TIME;

      // avoid elapsed times higher than one
      elapsed = elapsed > 1 ? 1 : elapsed;

      // apply easing to elapsed time
      value = ease(elapsed);

      currentX = context.startX + (context.x - context.startX) * value;
      currentY = context.startY + (context.y - context.startY) * value;

      context.method.call(context.scrollable, currentX, currentY);

      // scroll more if we have not reached our destination
      if (currentX !== context.x || currentY !== context.y) {
        w.requestAnimationFrame(step.bind(w, context));
      }
    }

    /**
     * scrolls window or element with a smooth behavior
     * @method smoothScroll
     * @param {Object|Node} el
     * @param {Number} x
     * @param {Number} y
     * @returns {undefined}
     */
    function smoothScroll(el, x, y) {
      var scrollable;
      var startX;
      var startY;
      var method;
      var startTime = now();

      // define scroll context
      if (el === d.body) {
        scrollable = w;
        startX = w.scrollX || w.pageXOffset;
        startY = w.scrollY || w.pageYOffset;
        method = original.scroll;
      } else {
        scrollable = el;
        startX = el.scrollLeft;
        startY = el.scrollTop;
        method = scrollElement;
      }

      // scroll looping over a frame
      step({
        scrollable: scrollable,
        method: method,
        startTime: startTime,
        startX: startX,
        startY: startY,
        x: x,
        y: y
      });
    }

    // ORIGINAL METHODS OVERRIDES
    // w.scroll and w.scrollTo
    w.scroll = w.scrollTo = function() {
      // avoid action when no arguments are passed
      if (arguments[0] === undefined) {
        return;
      }

      // avoid smooth behavior if not required
      if (shouldBailOut(arguments[0]) === true) {
        original.scroll.call(
          w,
          arguments[0].left !== undefined
            ? arguments[0].left
            : typeof arguments[0] !== 'object'
              ? arguments[0]
              : w.scrollX || w.pageXOffset,
          // use top prop, second argument if present or fallback to scrollY
          arguments[0].top !== undefined
            ? arguments[0].top
            : arguments[1] !== undefined
              ? arguments[1]
              : w.scrollY || w.pageYOffset
        );

        return;
      }

      // LET THE SMOOTHNESS BEGIN!
      smoothScroll.call(
        w,
        d.body,
        arguments[0].left !== undefined
          ? ~~arguments[0].left
          : w.scrollX || w.pageXOffset,
        arguments[0].top !== undefined
          ? ~~arguments[0].top
          : w.scrollY || w.pageYOffset
      );
    };

    // w.scrollBy
    w.scrollBy = function() {
      // avoid action when no arguments are passed
      if (arguments[0] === undefined) {
        return;
      }

      // avoid smooth behavior if not required
      if (shouldBailOut(arguments[0])) {
        original.scrollBy.call(
          w,
          arguments[0].left !== undefined
            ? arguments[0].left
            : typeof arguments[0] !== 'object' ? arguments[0] : 0,
          arguments[0].top !== undefined
            ? arguments[0].top
            : arguments[1] !== undefined ? arguments[1] : 0
        );

        return;
      }

      // LET THE SMOOTHNESS BEGIN!
      smoothScroll.call(
        w,
        d.body,
        ~~arguments[0].left + (w.scrollX || w.pageXOffset),
        ~~arguments[0].top + (w.scrollY || w.pageYOffset)
      );
    };

    // Element.prototype.scroll and Element.prototype.scrollTo
    Element.prototype.scroll = Element.prototype.scrollTo = function() {
      // avoid action when no arguments are passed
      if (arguments[0] === undefined) {
        return;
      }

      // avoid smooth behavior if not required
      if (shouldBailOut(arguments[0]) === true) {
        // if one number is passed, throw error to match Firefox implementation
        if (typeof arguments[0] === 'number' && arguments[1] === undefined) {
          throw new SyntaxError('Value could not be converted');
        }

        original.elementScroll.call(
          this,
          // use left prop, first number argument or fallback to scrollLeft
          arguments[0].left !== undefined
            ? ~~arguments[0].left
            : typeof arguments[0] !== 'object' ? ~~arguments[0] : this.scrollLeft,
          // use top prop, second argument or fallback to scrollTop
          arguments[0].top !== undefined
            ? ~~arguments[0].top
            : arguments[1] !== undefined ? ~~arguments[1] : this.scrollTop
        );

        return;
      }

      var left = arguments[0].left;
      var top = arguments[0].top;

      // LET THE SMOOTHNESS BEGIN!
      smoothScroll.call(
        this,
        this,
        typeof left === 'undefined' ? this.scrollLeft : ~~left,
        typeof top === 'undefined' ? this.scrollTop : ~~top
      );
    };

    // Element.prototype.scrollBy
    Element.prototype.scrollBy = function() {
      // avoid action when no arguments are passed
      if (arguments[0] === undefined) {
        return;
      }

      // avoid smooth behavior if not required
      if (shouldBailOut(arguments[0]) === true) {
        original.elementScroll.call(
          this,
          arguments[0].left !== undefined
            ? ~~arguments[0].left + this.scrollLeft
            : ~~arguments[0] + this.scrollLeft,
          arguments[0].top !== undefined
            ? ~~arguments[0].top + this.scrollTop
            : ~~arguments[1] + this.scrollTop
        );

        return;
      }

      this.scroll({
        left: ~~arguments[0].left + this.scrollLeft,
        top: ~~arguments[0].top + this.scrollTop,
        behavior: arguments[0].behavior
      });
    };

    // Element.prototype.scrollIntoView
    Element.prototype.scrollIntoView = function() {
      // avoid smooth behavior if not required
      if (shouldBailOut(arguments[0]) === true) {
        original.scrollIntoView.call(
          this,
          arguments[0] === undefined ? true : arguments[0]
        );

        return;
      }

      // LET THE SMOOTHNESS BEGIN!
      var scrollableParent = findScrollableParent(this);
      var parentRects = scrollableParent.getBoundingClientRect();
      var clientRects = this.getBoundingClientRect();

      if (scrollableParent !== d.body) {
        // reveal element inside parent
        smoothScroll.call(
          this,
          scrollableParent,
          scrollableParent.scrollLeft + clientRects.left - parentRects.left,
          scrollableParent.scrollTop + clientRects.top - parentRects.top
        );

        // reveal parent in viewport unless is fixed
        if (w.getComputedStyle(scrollableParent).position !== 'fixed') {
          w.scrollBy({
            left: parentRects.left,
            top: parentRects.top,
            behavior: 'smooth'
          });
        }
      } else {
        // reveal element in viewport
        w.scrollBy({
          left: clientRects.left,
          top: clientRects.top,
          behavior: 'smooth'
        });
      }
    };
  }

  if (true) {
    // commonjs
    module.exports = { polyfill: polyfill };
  } else {}

}());


/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var stylesInDom = {};

var isOldIE = function isOldIE() {
  var memo;
  return function memorize() {
    if (typeof memo === 'undefined') {
      // Test for IE <= 9 as proposed by Browserhacks
      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
      // Tests for existence of standard globals is to allow style-loader
      // to operate correctly into non-standard environments
      // @see https://github.com/webpack-contrib/style-loader/issues/177
      memo = Boolean(window && document && document.all && !window.atob);
    }

    return memo;
  };
}();

var getTarget = function getTarget() {
  var memo = {};
  return function memorize(target) {
    if (typeof memo[target] === 'undefined') {
      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself

      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
        try {
          // This will throw an exception if access to iframe is blocked
          // due to cross-origin restrictions
          styleTarget = styleTarget.contentDocument.head;
        } catch (e) {
          // istanbul ignore next
          styleTarget = null;
        }
      }

      memo[target] = styleTarget;
    }

    return memo[target];
  };
}();

function listToStyles(list, options) {
  var styles = [];
  var newStyles = {};

  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var css = item[1];
    var media = item[2];
    var sourceMap = item[3];
    var part = {
      css: css,
      media: media,
      sourceMap: sourceMap
    };

    if (!newStyles[id]) {
      styles.push(newStyles[id] = {
        id: id,
        parts: [part]
      });
    } else {
      newStyles[id].parts.push(part);
    }
  }

  return styles;
}

function addStylesToDom(styles, options) {
  for (var i = 0; i < styles.length; i++) {
    var item = styles[i];
    var domStyle = stylesInDom[item.id];
    var j = 0;

    if (domStyle) {
      domStyle.refs++;

      for (; j < domStyle.parts.length; j++) {
        domStyle.parts[j](item.parts[j]);
      }

      for (; j < item.parts.length; j++) {
        domStyle.parts.push(addStyle(item.parts[j], options));
      }
    } else {
      var parts = [];

      for (; j < item.parts.length; j++) {
        parts.push(addStyle(item.parts[j], options));
      }

      stylesInDom[item.id] = {
        id: item.id,
        refs: 1,
        parts: parts
      };
    }
  }
}

function insertStyleElement(options) {
  var style = document.createElement('style');

  if (typeof options.attributes.nonce === 'undefined') {
    var nonce =  true ? __webpack_require__.nc : undefined;

    if (nonce) {
      options.attributes.nonce = nonce;
    }
  }

  Object.keys(options.attributes).forEach(function (key) {
    style.setAttribute(key, options.attributes[key]);
  });

  if (typeof options.insert === 'function') {
    options.insert(style);
  } else {
    var target = getTarget(options.insert || 'head');

    if (!target) {
      throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
    }

    target.appendChild(style);
  }

  return style;
}

function removeStyleElement(style) {
  // istanbul ignore if
  if (style.parentNode === null) {
    return false;
  }

  style.parentNode.removeChild(style);
}
/* istanbul ignore next  */


var replaceText = function replaceText() {
  var textStore = [];
  return function replace(index, replacement) {
    textStore[index] = replacement;
    return textStore.filter(Boolean).join('\n');
  };
}();

function applyToSingletonTag(style, index, remove, obj) {
  var css = remove ? '' : obj.css; // For old IE

  /* istanbul ignore if  */

  if (style.styleSheet) {
    style.styleSheet.cssText = replaceText(index, css);
  } else {
    var cssNode = document.createTextNode(css);
    var childNodes = style.childNodes;

    if (childNodes[index]) {
      style.removeChild(childNodes[index]);
    }

    if (childNodes.length) {
      style.insertBefore(cssNode, childNodes[index]);
    } else {
      style.appendChild(cssNode);
    }
  }
}

function applyToTag(style, options, obj) {
  var css = obj.css;
  var media = obj.media;
  var sourceMap = obj.sourceMap;

  if (media) {
    style.setAttribute('media', media);
  }

  if (sourceMap && btoa) {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  } // For old IE

  /* istanbul ignore if  */


  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    while (style.firstChild) {
      style.removeChild(style.firstChild);
    }

    style.appendChild(document.createTextNode(css));
  }
}

var singleton = null;
var singletonCounter = 0;

function addStyle(obj, options) {
  var style;
  var update;
  var remove;

  if (options.singleton) {
    var styleIndex = singletonCounter++;
    style = singleton || (singleton = insertStyleElement(options));
    update = applyToSingletonTag.bind(null, style, styleIndex, false);
    remove = applyToSingletonTag.bind(null, style, styleIndex, true);
  } else {
    style = insertStyleElement(options);
    update = applyToTag.bind(null, style, options);

    remove = function remove() {
      removeStyleElement(style);
    };
  }

  update(obj);
  return function updateStyle(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {
        return;
      }

      update(obj = newObj);
    } else {
      remove();
    }
  };
}

module.exports = function (list, options) {
  options = options || {};
  options.attributes = typeof options.attributes === 'object' ? options.attributes : {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
  // tags it will allow on a page

  if (!options.singleton && typeof options.singleton !== 'boolean') {
    options.singleton = isOldIE();
  }

  var styles = listToStyles(list, options);
  addStylesToDom(styles, options);
  return function update(newList) {
    var mayRemove = [];

    for (var i = 0; i < styles.length; i++) {
      var item = styles[i];
      var domStyle = stylesInDom[item.id];

      if (domStyle) {
        domStyle.refs--;
        mayRemove.push(domStyle);
      }
    }

    if (newList) {
      var newStyles = listToStyles(newList, options);
      addStylesToDom(newStyles, options);
    }

    for (var _i = 0; _i < mayRemove.length; _i++) {
      var _domStyle = mayRemove[_i];

      if (_domStyle.refs === 0) {
        for (var j = 0; j < _domStyle.parts.length; j++) {
          _domStyle.parts[j]();
        }

        delete stylesInDom[_domStyle.id];
      }
    }
  };
};

/***/ }),

/***/ "./src/font/CaviarDreams_Bold.ttf":
/*!****************************************!*\
  !*** ./src/font/CaviarDreams_Bold.ttf ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "data:font/ttf;base64,"

/***/ }),

/***/ "./src/font/Coves_Bold.otf":
/*!*********************************!*\
  !*** ./src/font/Coves_Bold.otf ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "data:font/otf;base64,"

/***/ }),

/***/ "./src/font/Futura_Bold.otf":
/*!**********************************!*\
  !*** ./src/font/Futura_Bold.otf ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "data:font/otf;base64,"

/***/ }),

/***/ "./src/font/fontello.eot?66750031":
/*!****************************************!*\
  !*** ./src/font/fontello.eot?66750031 ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "data:application/vnd.ms-fontobject;base64,"

/***/ }),

/***/ "./src/font/fontello.svg?66750031":
/*!****************************************!*\
  !*** ./src/font/fontello.svg?66750031 ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "img/fontello.svg";

/***/ }),

/***/ "./src/font/fontello.ttf?66750031":
/*!****************************************!*\
  !*** ./src/font/fontello.ttf?66750031 ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "data:font/ttf;base64,"

/***/ }),

/***/ "./src/font/fontello.woff2?66750031":
/*!******************************************!*\
  !*** ./src/font/fontello.woff2?66750031 ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "data:font/woff2;base64,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"

/***/ }),

/***/ "./src/font/fontello.woff?66750031":
/*!*****************************************!*\
  !*** ./src/font/fontello.woff?66750031 ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "data:font/woff;base64,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"

/***/ }),

/***/ "./src/img/hero-bg.png":
/*!*****************************!*\
  !*** ./src/img/hero-bg.png ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "img/hero-bg.png";

/***/ }),

/***/ "./src/img/testimonial-bg.png":
/*!************************************!*\
  !*** ./src/img/testimonial-bg.png ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "img/testimonial-bg.png";

/***/ }),

/***/ "./src/img/testimonial.png":
/*!*********************************!*\
  !*** ./src/img/testimonial.png ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "img/testimonial.png";

/***/ }),

/***/ "./src/img/triangle-1.png":
/*!********************************!*\
  !*** ./src/img/triangle-1.png ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "img/triangle-1.png";

/***/ }),

/***/ "./src/img/triangle-2.png":
/*!********************************!*\
  !*** ./src/img/triangle-2.png ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "img/triangle-2.png";

/***/ }),

/***/ "./src/img/triangle-3.png":
/*!********************************!*\
  !*** ./src/img/triangle-3.png ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "img/triangle-3.png";

/***/ }),

/***/ "./src/img/triangle-4.png":
/*!********************************!*\
  !*** ./src/img/triangle-4.png ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "img/triangle-4.png";

/***/ }),

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var smoothscroll_polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! smoothscroll-polyfill */ "./node_modules/smoothscroll-polyfill/dist/smoothscroll.js");
/* harmony import */ var smoothscroll_polyfill__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(smoothscroll_polyfill__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var normalize_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! normalize.css */ "./node_modules/normalize.css/normalize.css");
/* harmony import */ var normalize_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(normalize_css__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _scss_main_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../scss/main.scss */ "./src/scss/main.scss");
/* harmony import */ var _scss_main_scss__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_scss_main_scss__WEBPACK_IMPORTED_MODULE_2__);




/**
 * Smoothly scrolls to the anchor specified by the link to which this listener
 * is attached.
 */

let scrollToAnchor = function(e) {
  e.preventDefault();

  document.querySelector(e.target.getAttribute('href')).scrollIntoView({
      behavior: 'smooth'
  });
}

window.onload = function() {
  smoothscroll_polyfill__WEBPACK_IMPORTED_MODULE_0___default.a.polyfill();
  
  document.querySelectorAll('a[href^="#"]').forEach(function(anchor) {
    anchor.addEventListener('click', scrollToAnchor);
  });
};

/***/ }),

/***/ "./src/scss/main.scss":
/*!****************************!*\
  !*** ./src/scss/main.scss ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!../../node_modules/postcss-loader/src!../../node_modules/sass-loader/dist/cjs.js!./main.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/src/index.js!./node_modules/sass-loader/dist/cjs.js!./src/scss/main.scss");

if (typeof content === 'string') {
  content = [[module.i, content, '']];
}

var options = {}

options.insert = "head";
options.singleton = false;

var update = __webpack_require__(/*! ../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js")(content, options);

if (content.locals) {
  module.exports = content.locals;
}


/***/ }),

/***/ 0:
/*!*******************************!*\
  !*** multi ./src/js/index.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./src/js/index.js */"./src/js/index.js");


/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,